{"version":3,"sources":["Components.tsx","Caret.tsx","plugins/block.ts","plugins/link.ts","plugins/mark.ts","EditorFrame.tsx","Client.tsx","Room.tsx","App.tsx","index.tsx"],"names":["RoomWrapper","styled","div","H4","h4","Input","input","Button","button","IconButton","props","color","active","border","padding","Icon","Grid","Title","Instance","online","ClientFrame","Caret","data","isForward","cursorStyles","cursorStyleBase","background","left","caretStyles","caretStyleBase","contentEditable","style","position","name","top","pointerEvents","userSelect","transform","fontSize","whiteSpace","height","width","LIST_TYPES","isBlockActive","editor","format","Editor","nodes","match","n","type","isLinkActive","unwrapLink","Transforms","unwrapNodes","wrapLink","href","selection","isCollapsed","Range","link","children","text","insertNodes","wrapNodes","split","collapse","edge","isMarkActive","marks","renderElement","EditorFrame","value","onChange","decorate","renderLeaf","useCallback","display","flexWrap","backgroundColor","zIndex","icon","Element","attributes","element","Leaf","leaf","bold","code","italic","underline","alphaColor","isCaret","BlockButton","useSlate","onMouseDown","event","preventDefault","isActive","isList","includes","setNodes","block","toggleBlock","className","MarkButton","removeMark","addMark","toggleMark","LinkButton","url","window","prompt","insertLink","Client","id","slug","removeUser","useState","setValue","isOnline","setOnlineState","useMemo","randomColor","luminosity","alpha","doc","Y","getArray","WebsocketProvider","connect","sharedType","provider","withCursor","withYjs","e","insertData","insertText","isInline","isUrl","getData","withLinks","withReact","withHistory","createEditor","awareness","useEffect","on","status","setLocalState","slice","isSynced","length","toSharedType","disconnect","useCursors","Head","marginTop","marginBottom","onClick","createUser","faker","random","uuid","firstName","lastName","Room","removeRoom","users","setUsers","roomSlug","setRoomSlug","isRemounted","setRemountState","remount","debounce","setTimeout","userId","filter","u","target","concat","map","user","key","App","rooms","setRooms","addRoom","lorem","room","r","Panel","AddButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.220e042c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const RoomWrapper = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 2px solid #e8e8e8;\n`;\n\nexport const H4 = styled.h4`\n  margin: 0;\n  padding-right: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 6px 14px;\n  font-size: 14px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  min-width: 240px;\n  outline: none;\n  border: 2px solid palevioletred;\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 6px 14px;\n  display: block;\n  outline: none;\n  background-color: transparent;\n  font-size: 14px;\n  text-align: center;\n  color: palevioletred;\n  white-space: nowrap;\n  border: 2px solid palevioletred;\n  & + button {\n    margin-left: 10px;\n  }\n`;\n\nexport const IconButton = styled(Button)((props: any) => ({\n  color: props.active ? \"mediumvioletred\" : \"lightpink\",\n  border: \"none\",\n  padding: 0,\n}));\n\nexport const Icon = styled.div``;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  @media (max-width: 767px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Instance = styled.div<{ online: boolean }>`\n  background: ${(props) =>\n    props.online ? \"rgba(128, 128, 128, 0.1)\" : \"rgba(247, 0, 0, 0.2)\"};\n  padding: 20px 20px 30px;\n`;\n\nexport const ClientFrame = styled.div`\n  box-shadow: 2px 2px 4px rgba(128, 128, 128, 0.2);\n  padding: 10px;\n  min-height: 70px;\n  margin-left: -10px;\n  margin-right: -10px;\n  background: white;\n  blockquote {\n    border-left: 2px solid #ddd;\n    margin-left: 0;\n    margin-right: 0;\n    padding-left: 10px;\n    color: #aaa;\n    font-style: italic;\n  }\n  a {\n    color: purple;\n    text-decoration: none;\n  }\n  a:visited {\n    color: darkmagenta;\n  }\n`;\n","import React from \"react\";\n\ninterface Caret {\n  isForward: boolean;\n  data: { name: string; color: string };\n}\n\nconst Caret: React.FC<Caret> = ({ data, isForward }) => {\n  const cursorStyles = {\n    ...cursorStyleBase,\n    background: data.color,\n    left: isForward ? \"100%\" : \"0%\",\n  };\n  const caretStyles = {\n    ...caretStyleBase,\n    background: data.color,\n    left: isForward ? \"100%\" : \"0%\",\n  };\n\n  caretStyles[isForward ? \"bottom\" : \"top\"] = 0;\n\n  return (\n    <>\n      <span contentEditable={false} style={caretStyles}>\n        <span style={{ position: \"relative\" }}>\n          <span contentEditable={false} style={cursorStyles}>\n            {data.name}\n          </span>\n        </span>\n      </span>\n    </>\n  );\n};\n\nexport default Caret;\n\nconst cursorStyleBase = {\n  position: \"absolute\",\n  top: -2,\n  pointerEvents: \"none\",\n  userSelect: \"none\",\n  transform: \"translateY(-100%)\",\n  fontSize: 10,\n  color: \"white\",\n  background: \"palevioletred\",\n  whiteSpace: \"nowrap\",\n} as any;\n\nconst caretStyleBase = {\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  userSelect: \"none\",\n  height: \"1.2em\",\n  width: 2,\n  background: \"palevioletred\",\n} as any;\n","import { Editor, Transforms } from \"slate\";\n\nconst LIST_TYPES: string[] = [\"numbered-list\", \"bulleted-list\"];\n\nexport const toggleBlock = (editor: Editor, format: string): void => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) => LIST_TYPES.includes(n.type as any),\n    split: true,\n  });\n\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : format,\n  });\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nexport const isBlockActive = (editor: Editor, format: string): boolean => {\n  const [match] = Editor.nodes(editor, {\n    match: (n) => n.type === format,\n  });\n\n  return !!match;\n};\n","import isUrl from \"is-url\";\nimport { Editor, Element, Range, Transforms } from \"slate\";\n\nexport interface LinkEditor extends Editor {\n  insertData: (data: any) => void;\n}\n\nexport const withLinks = <T extends Editor>(editor: T): T & LinkEditor => {\n  const e = editor as T & LinkEditor;\n\n  const { insertData, insertText, isInline } = e;\n\n  e.isInline = (element: Element) => {\n    return element.type === \"link\" ? true : isInline(element);\n  };\n\n  e.insertText = (text: string): void => {\n    if (text && isUrl(text)) {\n      wrapLink(editor, text);\n    } else {\n      insertText(text);\n    }\n  };\n\n  e.insertData = (data: DataTransfer): void => {\n    const text = data.getData(\"text/plain\");\n\n    if (text && isUrl(text)) {\n      wrapLink(editor, text);\n    } else {\n      insertData(data);\n    }\n  };\n\n  return e;\n};\n\nexport const insertLink = (editor: Editor, href: string): void => {\n  if (editor.selection) {\n    wrapLink(editor, href);\n  }\n};\n\nexport const isLinkActive = (editor: Editor): boolean => {\n  const [link] = Editor.nodes(editor, { match: (n) => n.type === \"link\" });\n  return !!link;\n};\n\nexport const unwrapLink = (editor: Editor): void => {\n  Transforms.unwrapNodes(editor, { match: (n) => n.type === \"link\" });\n};\n\nexport const wrapLink = (editor: Editor, href: string): void => {\n  if (isLinkActive(editor)) {\n    unwrapLink(editor);\n  }\n\n  const { selection } = editor;\n  const isCollapsed = selection && Range.isCollapsed(selection);\n  const link = {\n    type: \"link\",\n    href,\n    children: isCollapsed ? [{ text: href }] : [],\n  };\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link);\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true });\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n};\n","import { Editor } from \"slate\";\n\nexport const toggleMark = (editor: Editor, format: string): void => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nexport const isMarkActive = (editor: Editor, format: string): boolean => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n","import Caret from \"Caret\";\nimport React, { useCallback } from \"react\";\nimport { Node } from \"slate\";\nimport {\n  Editable,\n  ReactEditor,\n  RenderLeafProps,\n  Slate,\n  useSlate,\n} from \"slate-react\";\nimport { ClientFrame, Icon, IconButton } from \"./Components\";\nimport { isBlockActive, toggleBlock } from \"./plugins/block\";\nimport { insertLink, isLinkActive, unwrapLink } from \"./plugins/link\";\nimport { isMarkActive, toggleMark } from \"./plugins/mark\";\n\nexport interface EditorFrame {\n  editor: ReactEditor;\n  value: Node[];\n  onChange: (value: Node[]) => void;\n  decorate: any;\n}\n\nconst renderElement = (props: any) => <Element {...props} />;\n\nconst EditorFrame: React.FC<EditorFrame> = ({\n  editor,\n  value,\n  onChange,\n  decorate,\n}) => {\n  const renderLeaf = useCallback((props: any) => <Leaf {...props} />, [\n    decorate,\n  ]);\n\n  return (\n    <ClientFrame>\n      <Slate editor={editor} value={value} onChange={onChange}>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            position: \"sticky\",\n            top: 0,\n            backgroundColor: \"white\",\n            zIndex: 1,\n          }}\n        >\n          <MarkButton format=\"bold\" icon=\"format_bold\" />\n          <MarkButton format=\"italic\" icon=\"format_italic\" />\n          <MarkButton format=\"underline\" icon=\"format_underlined\" />\n          <MarkButton format=\"code\" icon=\"code\" />\n\n          <BlockButton format=\"heading-one\" icon=\"looks_one\" />\n          <BlockButton format=\"heading-two\" icon=\"looks_two\" />\n          <BlockButton format=\"block-quote\" icon=\"format_quote\" />\n\n          <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\n          <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" />\n\n          <LinkButton />\n        </div>\n\n        <Editable\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          decorate={decorate}\n        />\n      </Slate>\n    </ClientFrame>\n  );\n};\n\nexport default EditorFrame;\n\nconst Element: React.FC<any> = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case \"link\":\n      return (\n        <a {...attributes} href={element.href}>\n          {children}\n        </a>\n      );\n    case \"block-quote\":\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case \"bulleted-list\":\n      return <ul {...attributes}>{children}</ul>;\n    case \"heading-one\":\n      return <h1 {...attributes}>{children}</h1>;\n    case \"heading-two\":\n      return <h2 {...attributes}>{children}</h2>;\n    case \"list-item\":\n      return <li {...attributes}>{children}</li>;\n    case \"numbered-list\":\n      return <ol {...attributes}>{children}</ol>;\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nconst Leaf: React.FC<RenderLeafProps> = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>;\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n\n  const data = leaf.data as any;\n\n  return (\n    <span\n      {...attributes}\n      style={\n        {\n          position: \"relative\",\n          backgroundColor: data?.alphaColor,\n        } as any\n      }\n    >\n      {leaf.isCaret ? <Caret {...(leaf as any)} /> : null}\n      {children}\n    </span>\n  );\n};\n\nconst BlockButton: React.FC<any> = ({ format, icon }) => {\n  const editor = useSlate();\n  return (\n    <IconButton\n      active={isBlockActive(editor, format)}\n      onMouseDown={(event: React.MouseEvent) => {\n        event.preventDefault();\n        toggleBlock(editor, format);\n      }}\n    >\n      <Icon className=\"material-icons\">{icon}</Icon>\n    </IconButton>\n  );\n};\n\nconst MarkButton: React.FC<any> = ({ format, icon }) => {\n  const editor = useSlate();\n  return (\n    <IconButton\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event: React.MouseEvent) => {\n        event.preventDefault();\n        toggleMark(editor, format);\n      }}\n    >\n      <Icon className=\"material-icons\">{icon}</Icon>\n    </IconButton>\n  );\n};\n\nconst LinkButton = () => {\n  const editor = useSlate();\n\n  const isActive = isLinkActive(editor);\n\n  return (\n    <IconButton\n      active={isActive}\n      onMouseDown={(event: React.MouseEvent) => {\n        event.preventDefault();\n\n        if (isActive) return unwrapLink(editor);\n\n        const url = window.prompt(\"Enter the URL of the link:\");\n\n        url && insertLink(editor, url);\n      }}\n    >\n      <Icon className=\"material-icons\">link</Icon>\n    </IconButton>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { createEditor, Node } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport { withReact } from \"slate-react\";\nimport {\n  SyncElement,\n  toSharedType,\n  useCursors,\n  withCursor,\n  withYjs,\n} from \"slate-yjs\";\nimport { WebsocketProvider } from \"y-websocket\";\nimport * as Y from \"yjs\";\nimport { Button, H4, Instance, Title } from \"./Components\";\nimport EditorFrame from \"./EditorFrame\";\nimport { withLinks } from \"./plugins/link\";\nimport randomColor from \"randomcolor\";\n\nconst WEBSOCKET_ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? \"wss://demos.yjs.dev/slate-demo\"\n    : \"ws://localhost:1234\";\n\ninterface ClientProps {\n  name: string;\n  id: string;\n  slug: string;\n  removeUser: (id: any) => void;\n}\n\nconst Client: React.FC<ClientProps> = ({ id, name, slug, removeUser }) => {\n  const [value, setValue] = useState<Node[]>([]);\n  const [isOnline, setOnlineState] = useState<boolean>(false);\n\n  const color = useMemo(\n    () =>\n      randomColor({\n        luminosity: \"dark\",\n        format: \"rgba\",\n        alpha: 1,\n      }),\n    []\n  );\n\n  const [sharedType, provider] = useMemo(() => {\n    const doc = new Y.Doc();\n    const sharedType = doc.getArray<SyncElement>(\"content\");\n    const provider = new WebsocketProvider(WEBSOCKET_ENDPOINT, slug, doc, {\n      connect: false,\n    });\n\n    return [sharedType, provider];\n  }, [id]);\n\n  const editor = useMemo(() => {\n    const editor = withCursor(\n      withYjs(withLinks(withReact(withHistory(createEditor()))), sharedType),\n      provider.awareness\n    );\n\n    return editor;\n  }, [sharedType, provider]);\n\n  useEffect(() => {\n    provider.on(\"status\", ({ status }: { status: string }) => {\n      setOnlineState(status === \"connected\");\n    });\n\n    provider.awareness.setLocalState({\n      alphaColor: color.slice(0, -2) + \"0.2)\",\n      color,\n      name,\n    });\n\n    // Super hacky way to provide a initial value from the client, if\n    // you plan to use y-websocket in prod you probably should provide the\n    // initial state from the server.\n    provider.on(\"sync\", (isSynced: boolean) => {\n      if (isSynced && sharedType.length === 0) {\n        toSharedType(sharedType, [\n          { type: \"paragraph\", children: [{ text: \"Hello world!\" }] },\n        ]);\n      }\n    });\n\n    provider.connect();\n\n    return () => {\n      provider.disconnect();\n    };\n  }, [provider]);\n\n  const { decorate } = useCursors(editor);\n\n  const toggleOnline = () => {\n    isOnline ? provider.disconnect() : provider.connect();\n  };\n\n  return (\n    <Instance online={isOnline}>\n      <Title>\n        <Head>Editor: {name}</Head>\n        <div style={{ display: \"flex\", marginTop: 10, marginBottom: 10 }}>\n          <Button type=\"button\" onClick={toggleOnline}>\n            Go {isOnline ? \"offline\" : \"online\"}\n          </Button>\n          <Button type=\"button\" onClick={() => removeUser(id)}>\n            Remove\n          </Button>\n        </div>\n      </Title>\n\n      <EditorFrame\n        editor={editor}\n        value={value}\n        decorate={decorate}\n        onChange={(value: Node[]) => setValue(value)}\n      />\n    </Instance>\n  );\n};\n\nexport default Client;\n\nconst Head = styled(H4)`\n  margin-right: auto;\n`;\n","import faker from \"faker\";\nimport debounce from \"lodash/debounce\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport Client from \"./Client\";\nimport { Button, Grid, H4, Input, RoomWrapper, Title } from \"./Components\";\n\ninterface User {\n  id: string;\n  name: string;\n}\n\ninterface RoomProps {\n  slug: string;\n  removeRoom: () => void;\n}\n\nconst createUser = (): User => ({\n  id: faker.random.uuid(),\n  name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n});\n\nconst Room: React.FC<RoomProps> = ({ slug, removeRoom }) => {\n  const [users, setUsers] = useState<User[]>([createUser(), createUser()]);\n  const [roomSlug, setRoomSlug] = useState<string>(slug);\n  const [isRemounted, setRemountState] = useState(false);\n\n  const remount = debounce(() => {\n    setRemountState(true);\n    setTimeout(setRemountState, 50, false);\n  }, 300);\n\n  const changeSlug = (e: ChangeEvent<HTMLInputElement>) => {\n    setRoomSlug(e.target.value);\n    remount();\n  };\n\n  const addUser = () => setUsers((users) => users.concat(createUser()));\n\n  const removeUser = (userId: string) =>\n    setUsers((users) => users.filter((u: User) => u.id !== userId));\n\n  return (\n    <RoomWrapper>\n      <Title>\n        <H4>Document slug:</H4>\n        <Input type=\"text\" value={roomSlug} onChange={changeSlug} />\n        <Button type=\"button\" onClick={addUser}>\n          Add random user\n        </Button>\n        <Button type=\"button\" onClick={removeRoom}>\n          Remove Room\n        </Button>\n      </Title>\n      <Grid>\n        {users.map((user: User) =>\n          isRemounted ? null : (\n            <Client\n              {...user}\n              slug={roomSlug}\n              key={user.id}\n              removeUser={removeUser}\n            />\n          )\n        )}\n      </Grid>\n    </RoomWrapper>\n  );\n};\n\nexport default Room;\n","import styled from \"@emotion/styled\";\nimport faker from \"faker\";\nimport React, { useEffect, useState } from \"react\";\nimport Room from \"./Room\";\n\nconst App: React.FC = () => {\n  const [rooms, setRooms] = useState<string[]>([]);\n  const addRoom = () => setRooms(rooms.concat(faker.lorem.slug(4)));\n  const removeRoom = (room: string) => () =>\n    setRooms(rooms.filter((r) => r !== room));\n\n  useEffect(() => {\n    addRoom();\n  }, []);\n\n  return (\n    <div>\n      <Panel>\n        <AddButton type=\"button\" onClick={addRoom}>\n          Add Room\n        </AddButton>\n      </Panel>\n      {rooms.map((room) => (\n        <Room key={room} slug={room} removeRoom={removeRoom(room)} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n\nconst Panel = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  padding: 6px 14px;\n  display: block;\n  outline: none;\n  font-size: 14px;\n  max-width: 200px;\n  text-align: center;\n  color: palevioletred;\n  border: 2px solid palevioletred;\n`;\n\nconst AddButton = styled(Button)`\n  margin-left: 0px;\n  color: violet;\n  margin-bottom: 10px;\n  border: 2px solid violet;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}